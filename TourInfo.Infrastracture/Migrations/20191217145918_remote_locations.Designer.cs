// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TourInfo.Infrastracture.Repository.EFCore;

namespace TourInfo.Infrastracture.Migrations
{
    [DbContext(typeof(TourInfoDbContext))]
    [Migration("20191217145918_remote_locations")]
    partial class remote_locations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TourInfo.Domain.Base.Entity", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Entities");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Entity");
                });

            modelBuilder.Entity("TourInfo.Domain.EWQYEntity", b =>
                {
                    b.HasBaseType("TourInfo.Domain.Base.Entity");

                    b.Property<string>("Fingerprint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlaceType")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("EWQYEntity");
                });

            modelBuilder.Entity("TourInfo.Domain.Activity", b =>
                {
                    b.HasBaseType("TourInfo.Domain.EWQYEntity");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("createTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("credits")
                        .HasColumnType("int");

                    b.Property<string>("detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("endTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isShared")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pictureKeys")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("startTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("thumbnailKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Activity");
                });

            modelBuilder.Entity("TourInfo.Domain.CompanyVenue", b =>
                {
                    b.HasBaseType("TourInfo.Domain.EWQYEntity");

                    b.Property<string>("address")
                        .HasColumnName("CompanyVenue_address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("introduction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("isFavorite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnName("CompanyVenue_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pictureKeys")
                        .HasColumnName("CompanyVenue_pictureKeys")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("satisfactionScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("serviceNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("serviceTimeEnd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("serviceTimeStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("thumbnailKey")
                        .HasColumnName("CompanyVenue_thumbnailKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("typeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("CompanyVenue");
                });
#pragma warning restore 612, 618
        }
    }
}
